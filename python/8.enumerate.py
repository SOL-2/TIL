# 컬렉션의 가장 기본적인 동작은 요소를 모두 순회하며 읽어내는 것
# 기본은 for 반복문

# for문은 순서값을 확인할 수 없기 때문에 len을 활용해야 함
score = [87,99,65,79,100,92]

for no in range(len(score)):
    print(str(no +1) + '번 학생의 성적 : ', score[no])

# 1번 학생의 성적 :  87
# 2번 학생의 성적 :  99
# 3번 학생의 성적 :  65
# 4번 학생의 성적 :  79
# 5번 학생의 성적 :  100
# 6번 학생의 성적 :  92

# enumerate : 순서값과 요소값 둘을 한꺼번에 구해 튜플로 리턴하는 내장함수
# Ex)
race = ['저그', '테란', '프로토스']
print(list(enumerate(race)))
# [(0, '저그'), (1, '테란'), (2, '프로토스')]
print(enumerate(race)) # -> 이렇게 쓰면 enumerate 객체가 튀어나옴

# enumerate의 두 번째 인수로 시작값을 정하면 이 값에서 시작(1에서 시작)
for no, s in enumerate(score, 1):
    print(str(no) + '번 학생의 성적 : ', s)

# 1번 학생의 성적 :  87
# 2번 학생의 성적 :  99
# 3번 학생의 성적 :  65
# 4번 학생의 성적 :  79
# 5번 학생의 성적 :  100
# 6번 학생의 성적 :  92


# zip 함수 : 여러 개의 컬렉션을 합쳐 하나로 만든다
week = ['월', '화', '수', '목', '금', '토', '일']
food = ['양배추', '삼겹살', '사과', '닭갈비']
menu = zip(week, food)

for w, f in menu:
    print('%s요일 메뉴 : %s' %(w, f))

# 월요일 메뉴 : 양배추
# 화요일 메뉴 : 삼겹살
# 수요일 메뉴 : 사과
# 목요일 메뉴 : 닭갈비

# 짧은 쪽 길이에 맞춰 병합됨

# any : 참이 하나도 없다고 판단하여 거짓으로 평가
# all : 거짓이 하나도 없다고 판단하여 참으로 평가